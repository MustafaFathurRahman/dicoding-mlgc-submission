name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.16

    - name: Install dependencies
      run: npm install

    - name: Install @tensorflow/tfjs-node
      run: npm install @tensorflow/tfjs-node@3.21.1

    - name: Google Auth
      uses: "google-github-actions/auth@v1"
      with:
        credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

    - name: Set up Cloud SDK
      uses: "google-github-actions/setup-gcloud@v1"
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Set up environment variables
      run: |
        echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > bucket_service_key.json
        echo '${{ secrets.GCP_STORAGE_KEY }}' > storage_key.json  # Store storage.json key as file

    - name: Authenticate Docker with GCP
      run: |
        gcloud auth configure-docker
        docker info  # Verifikasi bahwa Docker dapat terhubung ke GCP

    - name: Configure Docker to use Artifact Registry
      run: |
        gcloud auth configure-docker asia-southeast2-docker.pkg.dev

    - name: Build Docker Image
      run: |
        docker build -t asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/submission-mlgc:latest .

    - name: Push Docker Image to Artifact Registry
      run: |
        docker push --disable-content-trust asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/submission-mlgc:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy submission-mlgc \
          --image=asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/submission-mlgc:latest \
          --region=${{ secrets.GCP_REGION }} \
          --platform=managed \
          --allow-unauthenticated \
          --service-account=${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }} \
          --set-env-vars MODEL_URL=${{ secrets.MODEL_URL }} \
          --set-env-vars STORAGE_KEY_PATH=/workspace/storage_key.json  # Pass storage key path as env variable
